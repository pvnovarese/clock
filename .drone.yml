---
kind: pipeline
name: Build

steps:
  - name: Build image
    image: docker
    environment:
      PASSWORD:
        from_secret: hub_password
    commands:
      - docker build -t $DRONE_REPO:$DRONE_BUILD_NUMBER .
      - docker login -u $$DRONE_REPO_NAMESPACE -p $PASSWORD
      - docker push $DRONE_REPO:$DRONE_BUILD_NUMBER
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock
  - name: Scan image
    image: docker
    environment: 
      ANCHORE_CLI_USER:
        from_secret: anchore_cli_user
      ANCHORE_CLI_PASS:
        from_secret: anchore_cli_pass
      ANCHORE_CLI_URL:
        from_secret: anchore_cli_url
    commands:
      - docker run --rm -e ANCHORE_CLI_URL=$ANCHORE_CLI_URL -e ANCHORE_CLI_USER=$ANCHORE_CLI_USER -e ANCHORE_CLI_PASS=$ANCHORE_CLI_PASS anchore/engine-cli sh -c "anchore-cli image add $DRONE_REPO:$DRONE_BUILD_NUMBER && anchore-cli image wait $DRONE_REPO:$DRONE_BUILD_NUMBER && anchore-cli evaluate check $DRONE_REPO:$DRONE_BUILD_NUMBER"
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock
  - name: Promote image
    image: docker
    environment:
      PASSWORD:
        from_secret: hub_password
    commands:
      - docker login -u $$DRONE_REPO_NAMESPACE -p $PASSWORD
      - docker tag $DRONE_REPO:$DRONE_BUILD_NUMBER $DRONE_REPO:prod
      - docker push $DRONE_REPO:prod
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock
  - name: Cleanup
    image: docker
    commands:
      - docker image rm $DRONE_REPO:$DRONE_BUILD_NUMBER
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock

volumes:
  - name: docker_sock
    host:
      path: /var/run/docker.sock
