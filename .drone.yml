---
kind: pipeline
name: Build

trigger:
  branch:
  - main
  event:
  - push

steps:
  - name: Build image
    image: docker
    environment:
      PASSWORD:
        from_secret: hub_password
    commands:
      # note that in this case $DRONE_REPO only works because my github username and my docker hub username are the same
      - docker build -t $DRONE_REPO:$DRONE_BUILD_NUMBER .
      # need to update this docker login 
      - docker login -u $$DRONE_REPO_NAMESPACE -p $PASSWORD
      - docker push $DRONE_REPO:$DRONE_BUILD_NUMBER
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock
        
  - name: Scan image
    # using my anchore-tools until anchorectl 1.0.0 ships
    image: docker.io/pvnovarese/anchore-tools:main
    environment: 
      ANCHORECTL_USERNAME:
        from_secret: anchorectl_username
      ANCHORECTL_PASSWORD:
        from_secret: anchorectl_password
      ANCHORECTL_URL:
        from_secret: anchorectl_url
    commands:
      # add image to queue, pass actual dockerfile, then wait for results
      - anchorectl image add --force --no-auto-subscribe --wait --annotation build_tool=drone --dockerfile ./Dockerfile ${DRONE_REPO}:${DRONE_BUILD_NUMBER}
      # check evaluation and break the pipeline if the result is FAIL/STOP
      - anchorectl image check --fail-based-on-results --detail ${DRONE_REPO}:${DRONE_BUILD_NUMBER}
      #
      # older anchore-cli commands (this is deprecated but might be useful for troubleshooting)
      #- anchore-cli image add $DRONE_REPO:$DRONE_BUILD_NUMBER 
      #- anchore-cli image wait $DRONE_REPO:$DRONE_BUILD_NUMBER 
      #- anchore-cli evaluate check $DRONE_REPO:$DRONE_BUILD_NUMBER
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock
        
  - name: Promote image
    image: docker
    environment:
      PASSWORD:
        from_secret: hub_password
    commands:
      - docker login -u $$DRONE_REPO_NAMESPACE -p $PASSWORD
      - docker tag $DRONE_REPO:$DRONE_BUILD_NUMBER $DRONE_REPO:prod
      - docker push $DRONE_REPO:prod
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock
        
  - name: Cleanup
    image: docker
    commands:
      - docker image rm $DRONE_REPO:$DRONE_BUILD_NUMBER
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock

volumes:
  - name: docker_sock
    host:
      path: /var/run/docker.sock
